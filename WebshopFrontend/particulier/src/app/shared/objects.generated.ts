/* tslint:disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v8.6.6221.23503 (NJsonSchema v7.6.6221.22528) (http://NSwag.org)
// </auto-generated>
//----------------------


export class Artikel { 
    categorieen: string[]; 
    id: number; 
    naam: string; 
    beschrijving: string; 
    prijs: number; 
    leverbaarVanaf: Date; 
    leverbaarTot: Date; 
    leverancierCode: string; 
    leverancier: string; 
    voorraad: number; 
    imagePath: string; 
    aantal: number;

    constructor(data?: any) {
        if (data !== undefined) {
            if (data["categorieen"] && data["categorieen"].constructor === Array) {
                this.categorieen = [];
                for (let item of data["categorieen"])
                    this.categorieen.push(item);
            }
            this.id = data["id"] !== undefined ? data["id"] : null;
            this.naam = data["naam"] !== undefined ? data["naam"] : null;
            this.beschrijving = data["beschrijving"] !== undefined ? data["beschrijving"] : null;
            this.prijs = data["prijs"] !== undefined ? data["prijs"] : null;
            this.leverbaarVanaf = data["leverbaarVanaf"] ? new Date(data["leverbaarVanaf"].toString()) : null;
            this.leverbaarTot = data["leverbaarTot"] ? new Date(data["leverbaarTot"].toString()) : null;
            this.leverancierCode = data["leverancierCode"] !== undefined ? data["leverancierCode"] : null;
            this.leverancier = data["leverancier"] !== undefined ? data["leverancier"] : null;
            this.voorraad = data["voorraad"] !== undefined ? data["voorraad"] : null;
            this.imagePath = data["imagePath"] !== undefined ? data["imagePath"] : null;
            this.aantal = data["aantal"] !== undefined ? data["aantal"] : null;
        }
    }

    static fromJS(data: any): Artikel {
        return new Artikel(data);
    }

    toJS(data?: any) {
        data = data === undefined ? {} : data;
        if (this.categorieen && this.categorieen.constructor === Array) {
            data["categorieen"] = [];
            for (let item of this.categorieen)
                data["categorieen"].push(item);
        }
        data["id"] = this.id !== undefined ? this.id : null;
        data["naam"] = this.naam !== undefined ? this.naam : null;
        data["beschrijving"] = this.beschrijving !== undefined ? this.beschrijving : null;
        data["prijs"] = this.prijs !== undefined ? this.prijs : null;
        data["leverbaarVanaf"] = this.leverbaarVanaf ? this.leverbaarVanaf.toISOString() : null;
        data["leverbaarTot"] = this.leverbaarTot ? this.leverbaarTot.toISOString() : null;
        data["leverancierCode"] = this.leverancierCode !== undefined ? this.leverancierCode : null;
        data["leverancier"] = this.leverancier !== undefined ? this.leverancier : null;
        data["voorraad"] = this.voorraad !== undefined ? this.voorraad : null;
        data["imagePath"] = this.imagePath !== undefined ? this.imagePath : null;
        data["aantal"] = this.aantal !== undefined ? this.aantal : null;
        return data; 
    }

    toJSON() {
        return JSON.stringify(this.toJS());
    }

    clone() {
        const json = this.toJSON();
        return new Artikel(JSON.parse(json));
    }
}

export class Bestelling { 
    artikelen: BestellingArtikel[]; 
    id: number; 
    klant: Klant;

    constructor(data?: any) {
        if (data !== undefined) {
            if (data["artikelen"] && data["artikelen"].constructor === Array) {
                this.artikelen = [];
                for (let item of data["artikelen"])
                    this.artikelen.push(BestellingArtikel.fromJS(item));
            }
            this.id = data["id"] !== undefined ? data["id"] : null;
            this.klant = data["klant"] ? Klant.fromJS(data["klant"]) : null;
        }
    }

    static fromJS(data: any): Bestelling {
        return new Bestelling(data);
    }

    toJS(data?: any) {
        data = data === undefined ? {} : data;
        if (this.artikelen && this.artikelen.constructor === Array) {
            data["artikelen"] = [];
            for (let item of this.artikelen)
                data["artikelen"].push(item.toJS());
        }
        data["id"] = this.id !== undefined ? this.id : null;
        data["klant"] = this.klant ? this.klant.toJS() : null;
        return data; 
    }

    toJSON() {
        return JSON.stringify(this.toJS());
    }

    clone() {
        const json = this.toJSON();
        return new Bestelling(JSON.parse(json));
    }
}

export class BestellingArtikel { 
    id: number; 
    aantal: number;

    constructor(data?: any) {
        if (data !== undefined) {
            this.id = data["id"] !== undefined ? data["id"] : null;
            this.aantal = data["aantal"] !== undefined ? data["aantal"] : null;
        }
    }

    static fromJS(data: any): BestellingArtikel {
        return new BestellingArtikel(data);
    }

    toJS(data?: any) {
        data = data === undefined ? {} : data;
        data["id"] = this.id !== undefined ? this.id : null;
        data["aantal"] = this.aantal !== undefined ? this.aantal : null;
        return data; 
    }

    toJSON() {
        return JSON.stringify(this.toJS());
    }

    clone() {
        const json = this.toJSON();
        return new BestellingArtikel(JSON.parse(json));
    }
}

export class Klant { 
    achternaam: string; 
    adres: string; 
    id: number; 
    plaatsnaam: string; 
    postcode: string; 
    telefoonnummer: number; 
    voornaam: string;

    constructor(data?: any) {
        if (data !== undefined) {
            this.achternaam = data["achternaam"] !== undefined ? data["achternaam"] : null;
            this.adres = data["adres"] !== undefined ? data["adres"] : null;
            this.id = data["id"] !== undefined ? data["id"] : null;
            this.plaatsnaam = data["plaatsnaam"] !== undefined ? data["plaatsnaam"] : null;
            this.postcode = data["postcode"] !== undefined ? data["postcode"] : null;
            this.telefoonnummer = data["telefoonnummer"] !== undefined ? data["telefoonnummer"] : null;
            this.voornaam = data["voornaam"] !== undefined ? data["voornaam"] : null;
        }
    }

    static fromJS(data: any): Klant {
        return new Klant(data);
    }

    toJS(data?: any) {
        data = data === undefined ? {} : data;
        data["achternaam"] = this.achternaam !== undefined ? this.achternaam : null;
        data["adres"] = this.adres !== undefined ? this.adres : null;
        data["id"] = this.id !== undefined ? this.id : null;
        data["plaatsnaam"] = this.plaatsnaam !== undefined ? this.plaatsnaam : null;
        data["postcode"] = this.postcode !== undefined ? this.postcode : null;
        data["telefoonnummer"] = this.telefoonnummer !== undefined ? this.telefoonnummer : null;
        data["voornaam"] = this.voornaam !== undefined ? this.voornaam : null;
        return data; 
    }

    toJSON() {
        return JSON.stringify(this.toJS());
    }

    clone() {
        const json = this.toJSON();
        return new Klant(JSON.parse(json));
    }
}